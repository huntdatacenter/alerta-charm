- hosts: localhost
  tasks:
    # https://docs.alerta.io/en/latest/gettingstarted/tutorial-1-deploy-alerta.html
    - name: Set facts
      set_fact:
        user: "alertaadmin"
        repo_url: "https://repo.mongodb.org/apt/ubuntu"
        auth_required: "True"
        signup_enabled: "False"
      tags: install

    - name: Set plugins fact if not defined
      set_fact:
        plugins: 'reject'
      when: plugins is not defined
      tags: install

    - name: Set environments fact if not defined
      set_fact:
        environments: "'Production', 'Development'"
      when: environments is not defined
      tags: install

    - name: Add apt key for MongoDB repository
      apt_key:
        keyserver: hkp://keyserver.ubuntu.com:80
        id: 9DA31620334BD75D9DCB49F368818C72E52529D4
        state: present
      tags: install

    - name: Add apt repository for MongoDB
      apt_repository:
        repo: deb [ arch=amd64 ] {{ repo_url }} {{ ansible_distribution_release }}/mongodb-org/4.0 multiverse
        state: present
        filename: mongodb-org-4.0
      register: add_repo
      tags: install

    - name: Update repositories cache
      apt:
        update_cache: yes
      when: add_repo is not skipped
      tags: install

    - name: Install "mongodb-org" package
      apt:
        name: mongodb-org
        state: present
      tags: install

    - name: Start and enable mongodb
      systemd:
        name: mongod
        state: started
        enabled: yes
        daemon-reload: yes
      tags: install

    - name: Install python3 packages
      apt:
        name: ["python3", "python3-setuptools", "python3-pip", "python3-dev", "python3-venv"]
        state: present
      tags: install

    - name: Install nginx and uwsgi packages
      apt:
        name: ["nginx", "uwsgi-plugin-python3"]
        state: present
      tags: install

    - name: Install or upgrade pip and wheel in virtualenv
      pip:
        name: ["pip", "wheel"]
        virtualenv: /opt/alerta
        state: latest
      tags: install

    - name: Install alerta server and uwsgi
      pip:
        name: ["alerta-server", "alerta", "uwsgi"]
        virtualenv: /opt/alerta
        state: present
      tags: install

    - name: Install Slack plugin
      pip:
        name: ["git+https://github.com/alerta/alerta-contrib.git#subdirectory=plugins/slack"]
        virtualenv: /opt/alerta
        state: present
      when: plugin_slack|bool
      tags: install

    - name: Create alerta binary
      copy:
        src: alerta
        dest: /usr/local/bin/alerta
        mode: u=rwx,g=rx,o=rx
      tags: install

    - name: Check if html directory is empty
      stat:
        path: /var/www/html/index.nginx-debian.html
      register: html_default
      tags: install

    - name: Remove default html directory
      file:
        path: /var/www/html
        state: absent
      when: html_default.stat.exists == true
      tags: install

    - name: Fetch and extract alerta-webui
      unarchive:
        src: https://github.com/alerta/alerta-webui/releases/latest/download/alerta-webui.tar.gz
        dest: /var/www
        remote_src: yes
      register: package_retrieval
      tags: install

    - name: Move alerta-webui into html directory
      command:
        cmd: mv /var/www/dist /var/www/html
        creates: /var/www/html
        removes: /var/www/dist
      when: package_retrieval is succeeded
      tags: install

    - name: Render config.json
      template:
        src: config.json.j2
        dest: /var/www/html/config.json
      tags: install

    - name: Check if alertad.conf exists
      stat:
        path: /etc/alertakey.conf
      register: alertakey
      tags: install

    - name: Create alertad.conf
      set_fact:
        secret_key: "{{ lookup('password', '/tmp/passwordfile length=30 chars=ascii_letters,digits') }}"
      when: alertakey.stat.exists == false
      register: alertakey_gen
      tags: install

    - name: Create alertakey.conf
      template:
        src: alertakey.j2
        dest: /etc/alertakey.conf
      when: alertakey_gen is not skipped
      tags: install

    - name: Get password
      set_fact:
        secret_key: "{{ lookup('file', '/etc/alertakey.conf') }}"
      when: alertakey.stat.exists == true
      tags: install

    - name: Check if alertad.conf exists
      stat:
        path: /etc/alertad.conf
      register: alertad
      tags: install

    - name: Create alertad.conf
      set_fact:
        auth_required: "False"
        signup_enabled: "True"
      when: alertad.stat.exists == false
      tags: install

    - name: Set alertad.conf
      template:
        src: alertad.j2
        dest: /etc/alertad.conf
      when: alertad.stat.exists == false
      register: alertad_create
      tags: install

    - name: Place wsgi file
      copy:
        src: wsgi.py
        dest: /var/www/wsgi.py
      tags: install

    - name: Render UWSGI ini template
      template:
        src: uwsgi.ini.j2
        dest: /etc/uwsgi.ini
      register: config
      tags: install

    - name: Render UWSGI service template
      template:
        src: uwsgi.service.j2
        dest: /etc/systemd/system/uwsgi.service
        mode: 0644
      register: service
      tags: install

    - name: Restart and assure enabled UWSGI service
      systemd:
        name: uwsgi
        state: restarted
        enabled: yes
        daemon-reload: "{{ service.changed }}"
      register: service_restart
      when: config.changed or service.changed or alertad_create.changed
      tags: install

    - name: Assure started and enabled UWSGI service
      systemd:
        name: uwsgi
        state: started
        enabled: yes
      when: service_restart is skipped
      tags: install

    - name: Render nginx config
      template:
        src: nginx.default.j2
        dest: /etc/nginx/sites-enabled/default
      register: nginx
      tags: install

    - name: Restart and assure enabled NGINX service
      systemd:
        name: nginx
        state: restarted
        enabled: yes
        daemon-reload: yes
      register: nginx_restart
      when: nginx.changed
      tags: install

    - name: Assure started and enabled NGINX service
      systemd:
        name: nginx
        state: started
        enabled: yes
      when: nginx_restart is skipped
      tags: install

    - name: Check if alertarc exists
      stat:
        path: /root/.alertarc
      register: alertarc
      tags: install

    - name: Create alerta credentials
      set_fact:
        password: "{{ lookup('password', '/tmp/passwordfile length=16 chars=ascii_letters,digits') }}"
      when: alertarc.stat.exists == false
      tags: install

    - name: Set alerta user
      command:
        cmd: >
          /opt/alerta/bin/alerta --endpoint-url http://0.0.0.0:{{ service_port }}/api signup
          --name "{{ user }}"
          --email "{{ user }}"
          --password "{{ password }}"
      environment:
        LC_ALL: en_US.UTF-8
        LANG: en_US.UTF-8
      when: alertarc.stat.exists == false
      register: alerta_user_set
      tags: install

    - name: Create alertarc
      template:
        src: alertarc.j2
        dest: /root/.alertarc
        mode: '0600'
      when: alerta_user_set is not skipped and alerta_user_set is succeeded
      tags: install

    - name: Set alerta config
      set_fact:
        auth_required: "True"
        signup_enabled: "False"
      when: alerta_user_set is not skipped or auth_required == "False" or signup_enabled == "True"
      tags: install

    - name: Set alertad.conf
      template:
        src: alertad.j2
        dest: /etc/alertad.conf
      register: alertad_recreate
      tags: install

    - name: Restart and assure enabled UWSGI service
      systemd:
        name: uwsgi
        state: restarted
      when: alertad_recreate.changed
      tags: install

    - name: Get Users
      command: alerta --json users
      environment:
        LC_ALL: en_US.UTF-8
        LANG: en_US.UTF-8
      register: alerta_users
      when: alerta_user_set is not skipped
      tags: install

    - name: Get admin ID for admin
      set_fact:
        admin_id: "{{ alerta_users.stdout | from_json | json_query('[?login==`alertaadmin`].id') }}"
      when: alerta_user_set is not skipped
      register: set_admin_id
      tags: install

    - name: Set user role
      command: alerta user --id {{ admin_id[0] }} --role admin --email-verified
      when: set_admin_id is not skipped and set_admin_id is succeeded
      tags: install

    - name: Stop and disable UWSGI
      systemd:
        name: uwsgi
        state: stopped
        enabled: no
      tags: never, uninstall

    - name: Stop and disable NGINX
      systemd:
        name: nginx
        state: stopped
        enabled: no
      tags: never, uninstall
